version: "3"

services:

  sonar-scanner: 
    build:
      context: .
      dockerfile: docker/sonar/Dockerfile
    container_name: sonar-scanner
    command: >
      sh -c "sleep 90 && 
             curl -u admin:admin -X POST 'http://sonar-server:9000/api/users/change_password?login=admin&previousPassword=admin&password=geekzone' && \
             sonar-scanner -X -Dsonar.host.url=http://sonar-server:9000 -Dsonar.projectKey=geekzone-sonar -D sonar.sourceEncoding=UTF-8 -Dsonar.python.version=3.9 -Dsonar.login=admin -Dsonar.password=geekzone && \
             curl -s -u admin:geekzone 'http://localhost:9000/api/qualitygates/project_status?projectKey=geekzone-sonar'"
    volumes:
      - "$PWD:/usr/src"
    depends_on: 
      - sonar-server

  sonar-server: 
    image: sonarqube:latest
    container_name: sonar-server
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 'true'
    ports: 
    - 9000:9000
  
  web:
    build: 
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: backend
    command: >
      sh -c "python3 manage.py wait_for_database &&
             python3 manage.py migrate && \
             python3 manage.py runserver 0.0.0.0:8000"
    env_file: 
      - web/.env.dev
    ports:
      - "8000:8000"
    depends_on:
      - db
      - celery_worker

  db:
    image: postgres
    container_name: postgres
    environment: 
      - POSTGRES_PASSWORD=password
    env_file: 
      - web/.env.dev
    restart: unless-stopped
    volumes: 
      - ./postgres-data:/var/lib/postgresql/data

  celery_worker:
    build: 
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: celery
    command: celery -A web worker -l INFO # If logging level omitted, default is "warning"
    env_file: 
      - web/.env.dev
    depends_on:
      - rabbitmq
    restart: 'no'

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: geekzone-rabbit
    user: rabbitmq
    ports:
      - "15672:15672"




   
