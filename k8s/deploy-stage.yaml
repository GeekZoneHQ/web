apiVersion: apps/v1
kind: Deployment
metadata:
  name: gz-web
  namespace: staging
  labels:
    app: gz-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gz-web
  template:
    metadata:
      labels:
        app: gz-web
    spec:
      initContainers:
      - name: wait-for-migration
        image: geekzone/backend:0.1.1132
        command: ['python3', 'manage.py', 'migrate']
        envFrom:
          - secretRef:
              name: staging-secrets
      - name: wait-for-database
        image: geekzone/backend:0.1.1132
        command: ['python3', 'manage.py', 'wait_for_database']
        envFrom:
          - secretRef:
              name: staging-secrets
      containers:
      - name: django-backend
        image: geekzone/backend:0.1.1132
        envFrom:
          - secretRef:
              name: staging-secrets
      - name: frontend-proxy
        image: geekzone/frontend:0.1.1132
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: gz-web-service
  namespace: staging
  annotations:
    external-dns.alpha.kubernetes.io/hostname: staging.geek.zone
#    external-dns.alpha.kubernetes.io/ttl: "120" #optional
spec:
  type: ClusterIP
  selector:
    app: gz-web
  ports:
  - port: 80
    targetPort: 8080

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: staging
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      name: postgres
  template:
    metadata:
      labels:
       name: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:11.2
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "geekzone"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "7$8oU%X4xHGoVinLgbdG"
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: staging
spec:
  type: ClusterIP
  ports:
    - port: 5432
  selector:
    name: postgres
  



