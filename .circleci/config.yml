version: 2.1
jobs:
  build-test-publish:
    machine:
      image: ubuntu-2004:202107-02
    steps:
      - checkout       
      - run:
          name: Build frontend image 
          background: true
          command: |
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            docker build -t geekzone/frontend:$TAG -f docker/proxy/Dockerfile .
      - run:
          name: "Build backend image in docker-compose" 
          command: |  
            docker-compose up -d
      - run:
          name: Run Testy McTestface tests
          command: |
            docker-compose run web python3 manage.py test 2>&1 | tee -a test-results/test-output
      - store_test_results:
          path: test-results/test-output
      - deploy:
          name: Push frontend image to Docker Hub
          background: true
          command: |
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker push geekzone/frontend:$TAG
      - deploy:
          name: Push backend image to Docker Hub
          command: |
            TAG="0.1.${CIRCLE_BUILD_NUM}"
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            docker tag project_web:latest geekzone/backend:$TAG
            docker push geekzone/backend:$TAG

  deploy-test:
    docker:
      - image: 'geekzone/infra'
    steps:
      - checkout
      - run:
          name: Fill out template variables in yaml files
          command: |
            export PR_NUMBER=$(echo "pr${CIRCLE_PULL_REQUEST##*/}")
            envsubst < k8s/test-environment/deploy-test.yaml | sponge k8s/test-environment/deploy-test.yaml
      - run:
          name: Connect to or create k8s cluster
          command: |
            { aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME
            } || 
            { az login --service-principal -u $CLIENT_ID -p $CLIENT_PASSWORD --tenant $TENANT_ID
            } &&
            { az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --admin 
            } ||
            { create-azure-infra
            } ||
            { create-aws-infra
            }   
      - run:
          name: Plan cluster destruction
          command: |
            { aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME 
            } &&
            { kubectl apply -f aws/k8s/cronjobs/destroy-infra.yaml
            }||
            { az login --service-principal -u $CLIENT_ID -p $CLIENT_PASSWORD --tenant $TENANT_ID
            } &&
            { az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --admin 
            } &&
            { kubectl apply -f azure/k8s/cronjobs/destroy-infra.yaml
            }
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: k8s/test-environment/deploy-test.yaml
          resource-name: deployment/test-gz-web
          namespace: $(echo "pr${CIRCLE_PULL_REQUEST##*/}")-${CIRCLE_PROJECT_REPONAME}
          show-kubectl-command: true

  deploy-prod:
    docker:
      - image: 'geekzone/infra'
    steps:
      - checkout
      - run:
          name: Fill out template variables in yaml files
          command: |
            envsubst < k8s/prod-environment/deploy-prod.yaml | sponge k8s/prod-environment/deploy-prod.yaml
      - run:
          name: Connect to or create k8s cluster
          command: |
            { aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME
            } || 
            { az login --service-principal -u $CLIENT_ID -p $CLIENT_PASSWORD --tenant $TENANT_ID
            } &&
            { az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --admin 
            } ||
            { create-azure-infra
            } ||
            { create-aws-infra
            }   
      - run:
          name: Plan cluster destruction
          command: |
            { aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME 
            } &&
            { destroy-aws-infra
            }||
            { az login --service-principal -u $CLIENT_ID -p $CLIENT_PASSWORD --tenant $TENANT_ID
            } &&
            { az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME --admin 
            } &&
            { destroy-azure-infra
            } 
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: k8s/prod-environment/deploy-prod.yaml
          resource-name: deployment/gz-web
          namespace: prod
          show-kubectl-command: true
orbs:
  kubernetes: circleci/kubernetes@0.12.0
 

workflows:
  version: 2
  main-web:
    jobs:
      - build-test-publish:
          filters:
              branches:
                ignore: 
                - /junk-.*/
          context:
            - org-global
      - deploy-test:
          requires:
          - build-test-publish
          filters:
              branches:
                only: /feature-.*/
          context:
            - org-global
      - deploy-prod:
          requires:
          - build-test-publish 
          filters:
              branches:
                only: main
          context:
            - org-global
